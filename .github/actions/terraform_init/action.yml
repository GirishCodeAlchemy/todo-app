name: Initialize terraform workspace
description: Runs multiple steps for configuring terraform without any remote side effect

inputs:
  terraform_dir:
    description: Name of the project
    required: true
  project_name:
    description: Name of the project
    required: true
  unique_key:
    description: Unique env key
    required: true

outputs:
  tfplan_file:
    description: Terraform plan output file
    value: ${{ steps.terraform-plan-setter.outputs.filename }}

runs:
  using: composite
  steps:
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
        terraform_version: 1.4.6

    - name: Create Terraform Plugin Cache Dir
      run: mkdir --parents $TF_PLUGIN_CACHE_DIR
      shell: bash

    - name: Install node configuration dependencies
      run: pip3 install boto3 python_wireguard
      shell: bash

    - name: Cache Terraform
      uses: actions/cache@v2
      with:
        path: ${{ env.TF_PLUGIN_CACHE_DIR }}
        key: ${{ runner.os }}-terraform

    - name: Print Terraform version
      run: terraform --version
      shell: bash

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check -diff -recursive .
      shell: bash
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: |
        terraform -chdir=${{ inputs.terraform_dir }} init -backend-config="key=${{ inputs.project_name }}-pr/${{ inputs.unique_key }}.json"
      shell: bash

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=${{ inputs.terraform_dir }} validate
      shell: bash

    - id: terraform-plan-setter
      run: echo "filename=$(echo terraform.plan)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Terraform Plan
      id: plan
      run: |
        terraform -chdir=${{ inputs.terraform_dir }} plan \
          -var="environment_id=${{ inputs.unique_key }}" \
          -lock-timeout=120s \
          -out ${{ steps.terraform-plan-setter.outputs.filename }}
      shell: bash